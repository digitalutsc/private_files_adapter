diff --git a/openseadragon.module b/openseadragon.module
index 161e42d..cd6b64d 100644
--- a/openseadragon.module
+++ b/openseadragon.module
@@ -89,6 +89,7 @@ function template_preprocess_openseadragon_formatter(&$variables) {
     $variables['#attached']['library'] = [
       'openseadragon/init',
     ];
+    $access_token = \Drupal::service('jwt.authentication.jwt')->generateToken();
     $variables['#attached']['drupalSettings']['openseadragon'][$openseadragon_viewer_id] = [
       'basePath' => Url::fromUri($iiif_address),
       'fitToAspectRatio' => $viewer_settings['fit_to_aspect_ratio'],
@@ -96,6 +97,14 @@ function template_preprocess_openseadragon_formatter(&$variables) {
         'id' => $openseadragon_viewer_id,
         'prefixUrl' => 'https://cdnjs.cloudflare.com/ajax/libs/openseadragon/2.4.2/images/',
         'tileSources' => $tile_sources,
+
+          // For dsu-utsc.
+        'loadTilesWithAjax' => TRUE,
+        'ajaxWithCredentials' => TRUE,
+        'ajaxHeaders' => [
+          "Authorization" => "Bearer " . $access_token,
+          'token' => $access_token,
+        ],
       ] + $viewer_settings,
     ];
 
@@ -111,10 +120,10 @@ function template_preprocess_openseadragon_formatter(&$variables) {
  */
 function template_preprocess_openseadragon_iiif_manifest_block(&$variables) {
   $cache_meta = CacheableMetadata::createFromRenderArray($variables);
-
+  $access_token = \Drupal::service('jwt.authentication.jwt')->generateToken();
   // Get the tile sources from the manifest.
   $parser = \Drupal::service('openseadragon.manifest_parser');
-  $tile_sources = $parser->getTileSources($variables['iiif_manifest_url']);
+  $tile_sources = $parser->getTileSources($variables['iiif_manifest_url'], $access_token);
 
   if (empty($tile_sources)) {
     $cache_meta->applyTo($variables);
@@ -148,6 +157,14 @@ function template_preprocess_openseadragon_iiif_manifest_block(&$variables) {
         'id' => $openseadragon_viewer_id,
         'prefixUrl' => 'https://cdnjs.cloudflare.com/ajax/libs/openseadragon/2.4.2/images/',
         'tileSources' => $tile_sources,
+
+        // For dsu-utsc.
+        'loadTilesWithAjax' => TRUE,
+        'ajaxWithCredentials' => TRUE,
+        'ajaxHeaders' => [
+          "Authorization" => "Bearer " . $access_token,
+          'token' => $access_token,
+        ],
       ] + $viewer_settings,
     ];
 
diff --git a/src/IIIFManifestParser.php b/src/IIIFManifestParser.php
index fc98f6a..d71b13c 100644
--- a/src/IIIFManifestParser.php
+++ b/src/IIIFManifestParser.php
@@ -64,11 +64,13 @@ class IIIFManifestParser {
    *
    * @param string $manifest_url
    *   The location of the IIIF manifest, which can include tokens.
+   * @param string $access_token
+   *   The JWT Access token.
    *
    * @return array
    *   The URLs of all the tile sources in a manifest.
    */
-  public function getTileSources($manifest_url) {
+  public function getTileSources($manifest_url, $access_token = NULL) {
 
     // Try to construct the URL out of a tokenized string
     // if the node is available.
@@ -85,7 +87,12 @@ class IIIFManifestParser {
 
     try {
       // Request the manifest.
-      $manifest_response = $this->httpClient->get($manifest_url);
+      // $manifest_response = $this->httpClient->get($manifest_url);
+      $manifest_response = $this->httpClient->request('GET', $manifest_url, [
+        'headers' => [
+          'Authorization' => 'Bearer ' . $access_token,
+        ],
+      ]);
 
       // Decode the manifest json.
       $manifest_string = (string) $manifest_response->getBody();
